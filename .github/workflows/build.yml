name: Build desktop apps

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      target:
        description: "Platform"
        required: true
        default: "both"
        type: choice
        options: [both, windows, macos]

jobs:
  build-windows:
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.target == 'both' || github.event.inputs.target == 'windows' }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.10" }
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Build (PyInstaller)
        shell: bash
        run: |
          pyinstaller --noconfirm --onefile --windowed app.py \
            --name SwibraceBench \
            --paths=. \
            --collect-submodules PySide6 \
            --collect-submodules controllers \
            --collect-submodules views \
            --collect-submodules utils \
            --add-data "settings.json;." \
            --add-data "assets;assets"
      - name: Copy editable settings.json
        shell: pwsh
        run: Copy-Item settings.json dist\settings.json -Force
      - uses: actions/upload-artifact@v4
        with:
          name: SwibraceBench-windows
          path: |
            dist/SwibraceBench.exe
            dist/settings.json
          if-no-files-found: error

  build-macos:
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.target == 'both' || github.event.inputs.target == 'macos' }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.10" }
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
      - name: Clean
        run: rm -rf build dist Testbench.spec || true
      - name: Build (PyInstaller)
        run: |
          pyinstaller app.py \
            -n "Testbench" \
            -w \
            --clean \
            --paths . \
            --collect-submodules PySide6 \
            --collect-submodules controllers \
            --collect-submodules utils \
            --collect-submodules views \
            --add-data "assets:assets" \
            --add-data "settings.json:."
      - name: Create DMG
        run: hdiutil create -volname "Testbench" -srcfolder "dist/Testbench.app" -ov -format UDZO "dist/Testbench.dmg"
      - uses: actions/upload-artifact@v4
        with:
          name: Testbench-macos
          path: |
            dist/Testbench.app
            dist/Testbench.dmg
          if-no-files-found: error